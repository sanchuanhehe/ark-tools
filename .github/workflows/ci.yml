name: CI/CD for VS Code Extension

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      # 1. 检出代码
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          # 先不启用缓存
          # cache: 'npm'

      # 3. 安装 xvfb
      - name: Install xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      # 4. 生成 package-lock.json
      - name: Generate package-lock.json
        run: npm i --package-lock-only

      # 现在可以配置缓存了
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      # 5. 安装依赖
      - name: Install dependencies
        run: npm ci

      # 6. 构建扩展
      - name: Build
        run: npm run compile

      # 7. 执行代码检查（可选择使用 ESLint 或其他工具）
      - name: Lint Code with ESLint
        run: npm run lint

      # 8. 执行测试
      - name: Run Tests with xvfb
        run: xvfb-run --auto-servernum npm test

      # 9. 安装 vsce
      - name: Install vsce
        run: npm install -g @vscode/vsce

      # 10. 构建扩展
      - name: Package Extension
        run: npm run package

      # 新增：上传构建产物到 Artifacts
      - name: Upload Extension Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ark-tools-extension
          path: "*.vsix"
          retention-days: 5

      - name: Commit package-lock.json
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          if [[ -n $(git status --porcelain package-lock.json) ]]; then
            git add package-lock.json
            git commit -m "chore: update package-lock.json [skip ci]"
            git push
          fi

  # 可选：自动发布到 Visual Studio Marketplace
  # 需要在 GitHub Secrets 中配置 `VSCE_PAT`
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    # 添加写入权限
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          # deploy job 也移除缓存配置
          # cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Package Extension
        run: npm run package

      # 新增：下载之前的构建产物
      - name: Download Extension Artifact
        uses: actions/download-artifact@v3
        with:
          name: ark-tools-extension

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: "*.vsix"
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Visual Studio Marketplace
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          npm install -g @vscode/vsce
          vsce publish -p ${{ secrets.VSCE_PAT }}
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
